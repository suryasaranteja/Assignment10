{"ast":null,"code":"var _jsxFileName = \"/Users/ramraju/Desktop/the-weather-forecasting-main/src/components/TodayWeather/Forecast/DailyForecast.js\";\nimport React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport DailyForecastItem from './DailyForecastItem';\nimport ErrorBox from '../../Reusable/ErrorBox';\nimport Layout from '../../Reusable/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyForecast = ({\n  data,\n  forecastList\n}) => {\n  const noDataProvided = !data || !forecastList || Object.keys(data).length === 0 || data.cod === '404' || forecastList.cod === '404';\n  let subHeader;\n  if (!noDataProvided && forecastList.length > 0) subHeader = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    sx: {\n      fontSize: {\n        xs: '10px',\n        sm: '12px'\n      },\n      textAlign: 'center',\n      lineHeight: 1,\n      color: '#04C4E0',\n      fontFamily: 'Roboto Condensed',\n      marginBottom: '1rem'\n    },\n    children: forecastList.length === 1 ? '1 available forecast' : `${forecastList.length} available forecasts`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n  let content;\n  if (noDataProvided) content = /*#__PURE__*/_jsxDEV(ErrorBox, {\n    flex: \"1\",\n    type: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 33\n  }, this);\n  if (!noDataProvided && forecastList.length > 0) content = /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: 'fit-content'\n    },\n    spacing: \"4px\",\n    children: forecastList.map((item, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      sm: 2,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      sx: {\n        marginBottom: {\n          xs: '1rem',\n          sm: '0'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(DailyForecastItem, {\n        item: item,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n  if (!noDataProvided && forecastList && forecastList.length === 0) subHeader = /*#__PURE__*/_jsxDEV(ErrorBox, {\n    flex: \"1\",\n    type: \"info\",\n    margin: \"2rem auto\",\n    errorMessage: \"No available forecasts for tonight.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"TODAY'S FORECAST\",\n    content: content,\n    sectionSubHeader: subHeader,\n    sx: {\n      marginTop: '2.9rem'\n    },\n    mb: \"0.3rem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_c = DailyForecast;\nexport default DailyForecast;\nvar _c;\n$RefreshReg$(_c, \"DailyForecast\");","map":{"version":3,"names":["React","Grid","Typography","DailyForecastItem","ErrorBox","Layout","jsxDEV","_jsxDEV","DailyForecast","data","forecastList","noDataProvided","Object","keys","length","cod","subHeader","variant","component","sx","fontSize","xs","sm","textAlign","lineHeight","color","fontFamily","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","content","flex","type","item","container","display","justifyContent","width","spacing","map","idx","flexDirection","alignItems","margin","errorMessage","title","sectionSubHeader","marginTop","mb","_c","$RefreshReg$"],"sources":["/Users/ramraju/Desktop/the-weather-forecasting-main/src/components/TodayWeather/Forecast/DailyForecast.js"],"sourcesContent":["import React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport DailyForecastItem from './DailyForecastItem';\nimport ErrorBox from '../../Reusable/ErrorBox';\nimport Layout from '../../Reusable/Layout';\n\nconst DailyForecast = ({ data, forecastList }) => {\n  const noDataProvided =\n    !data ||\n    !forecastList ||\n    Object.keys(data).length === 0 ||\n    data.cod === '404' ||\n    forecastList.cod === '404';\n\n  let subHeader;\n\n  if (!noDataProvided && forecastList.length > 0)\n    subHeader = (\n      <Typography\n        variant=\"h5\"\n        component=\"h5\"\n        sx={{\n          fontSize: { xs: '10px', sm: '12px' },\n          textAlign: 'center',\n          lineHeight: 1,\n          color: '#04C4E0',\n          fontFamily: 'Roboto Condensed',\n          marginBottom: '1rem',\n        }}\n      >\n        {forecastList.length === 1\n          ? '1 available forecast'\n          : `${forecastList.length} available forecasts`}\n      </Typography>\n    );\n\n  let content;\n\n  if (noDataProvided) content = <ErrorBox flex=\"1\" type=\"error\" />;\n\n  if (!noDataProvided && forecastList.length > 0)\n    content = (\n      <Grid\n        item\n        container\n        xs={12}\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          width: 'fit-content',\n        }}\n        spacing=\"4px\"\n      >\n        {forecastList.map((item, idx) => (\n          <Grid\n            key={idx}\n            item\n            xs={4}\n            sm={2}\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            sx={{\n              marginBottom: { xs: '1rem', sm: '0' },\n            }}\n          >\n            <DailyForecastItem item={item} data={data} />\n          </Grid>\n        ))}\n      </Grid>\n    );\n\n  if (!noDataProvided && forecastList && forecastList.length === 0)\n    subHeader = (\n      <ErrorBox\n        flex=\"1\"\n        type=\"info\"\n        margin=\"2rem auto\"\n        errorMessage=\"No available forecasts for tonight.\"\n      />\n    );\n\n  return (\n    <Layout\n      title=\"TODAY'S FORECAST\"\n      content={content}\n      sectionSubHeader={subHeader}\n      sx={{ marginTop: '2.9rem' }}\n      mb=\"0.3rem\"\n    />\n  );\n};\n\nexport default DailyForecast;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}